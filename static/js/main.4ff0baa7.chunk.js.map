{"version":3,"sources":["slices/cartSlice.js","slices/productsApi.js","components/Home/Home.jsx","components/NavBar/NavBar.jsx","components/Cart/Cart.jsx","App.js","slices/productsSlice.js","index.js"],"names":["initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","CartTotalAmount","cartSlice","createSlice","name","reducers","addToCart","state","action","itemIndex","findIndex","item","id","payload","cartQuantity","toast","info","position","tempProduct","push","success","title","setItem","stringify","removeFromCart","nextitems","filter","cartItem","error","decreaseCart","clearCart","getTotals","reduce","cartTotal","cartitem","price","itemTotal","total","quantity","actions","increaseCart","productsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getAllProducts","query","useGetAllProductsQuery","Home","data","isLoading","dispatch","useDispatch","history","useHistory","className","map","product","src","image","alt","category","onClick","addtocart","NavBar","useSelector","cart","to","xmlns","width","height","fill","viewBox","d","Cart","useEffect","length","fillRule","description","removeitem","deceement","inceement","App","path","component","exact","productsFetch","createAsyncThunk","a","axios","get","respons","productsSlice","items","status","extraReducers","pending","fulfilled","rejected","store","configureStore","reducer","products","productsReducer","cartReducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ff0baa7.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n\nconst initialState = {\n  cartItems: localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) :\n    []\n  ,\n  cartTotalQuantity: 0,\n  CartTotalAmount:0\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state,action) {\n      const itemIndex = state.cartItems.findIndex(\n        (item)=> item.id===action.payload.id\n      )\n      if (itemIndex>=0)\n      {\n        state.cartItems[itemIndex].cartQuantity += 1;\n        toast.info('Incerased Product Quantity',{\n          position:\"bottom-left\"\n        })\n      }\n      else\n      {\n        const tempProduct ={...action.payload, cartQuantity:1}\n        state.cartItems.push(tempProduct)\n        toast.success(` ${action.payload.title} Added To card`,{\n          position:\"bottom-left\"\n        })\n      }\n      localStorage.setItem('cartItems',JSON.stringify(state.cartItems))\n    },\n    removeFromCart(state,action) {\n      const nextitems= state.cartItems.filter(\n        cartItem => cartItem.id !== action.payload.id\n      )\n      state.cartItems = nextitems;\n      localStorage.setItem('cartItems',JSON.stringify(state.cartItems))\n      toast.error(` ${action.payload.title} Remove from card`,{\n          position:\"bottom-left\"\n        })\n    },\n    decreaseCart(state,action) {\n      const itemIndex = state.cartItems.findIndex(\n        (item)=> item.id===action.payload.id\n      )\n      if(state.cartItems[itemIndex].cartQuantity > 1)\n      {\n        state.cartItems[itemIndex].cartQuantity -= 1;\n      }\n      else if(state.cartItems[itemIndex].cartQuantity === 1)\n      {\n        const nextitems= state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n          )\n          state.cartItems = nextitems;\n        }\n      \n      localStorage.setItem('cartItems',JSON.stringify(state.cartItems));\n        toast.info('decrease Product Quantity',{\n          position:\"bottom-left\"\n        })\n    },\n    clearCart(state,action) {\n      state.cartItems = [];\n      toast.error('Cart Cleared  ',{\n          position:\"bottom-left\"\n        })\n      localStorage.setItem('cartItems',JSON.stringify(state.cartItems));\n    },\n    getTotals(state,action) {\n      let { total,quantity } = state.cartItems.reduce(\n        (cartTotal,cartitem) => {\n          const { price , cartQuantity} = cartitem;\n          const itemTotal = price * cartQuantity;\n          cartTotal.total += itemTotal;\n          cartTotal.quantity += cartQuantity;\n          return cartTotal;\n      },{\n        total: 0,\n        quantity:0\n      })  \n      state.cartTotalQuantity = quantity;\n      state.CartTotalAmount = total;\n    }\n\n  },\n});\n\nexport const { addToCart,\n  increaseCart,\n  decreaseCart,\n  removeFromCart,\n  getTotals,\n  clearCart\n} =\n  cartSlice.actions;\n\nexport default cartSlice.reducer;\n","// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// Define a service using a base URL and expected endpoints\nexport const productsApi = createApi({\n  reducerPath: \"productsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"https://fakestoreapi.com/\" }),\n  endpoints: (builder) => ({\n    getAllProducts: builder.query({\n      query: () => `products`,\n    }),\n  }),\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const { useGetAllProductsQuery } = productsApi;\n","import { useDispatch } from 'react-redux';\nimport { addToCart } from '../../slices/cartSlice';\nimport {  useGetAllProductsQuery } from '../../slices/productsApi';\nimport { useHistory } from \"react-router\";\nimport './Home.css';\n\nconst Home = () => {\n  const { data,error,isLoading } = useGetAllProductsQuery();\n  const dispatch = useDispatch();\n  const history=useHistory()\n\n\n\n  const addtocart = (product)=>{\n    dispatch(addToCart(product))\n    history.push(\"/cart\");\n  }\n  return (\n    <div className=\"home-container\">\n      {isLoading ? (<p>Loading...</p>\n      ) : error ? (\n          <p>An error occured...</p>\n        ) : (\n            <div>\n              <h2>\n                New Arrivals\n              </h2>\n              <div className='products'>\n                {data?.map(product => \n                  <div className='product' key={product.id}>\n                    <h3>{product.title}</h3>\n                    <img src={product.image} alt=''></img>\n                    <div className='details'>\n                      <span>{product.category}</span>\n                      <span className='price'>{product.price} $</span>\n                    </div>\n                    <button onClick={() => {\n                      addtocart(product)\n                      }}>Add to Cart</button>\n                  </div>\n                )\n                }\n                \n              </div>\n            </div>\n      )}\n      \n    </div>\n  );\n};\n\nexport default Home;\n","import { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport './Navbar.css'\n\n\nconst NavBar = () => {\n  const {cartTotalQuantity} = useSelector(state => state.cart);\n\n  return (\n    <nav className=\"nav-bar\">\n      <Link to=\"/\">\n        <h2>OnlineShop</h2>\n      </Link>\n      <Link to=\"/cart\">\n        <div className=\"nav-bag\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"35\"\n            height=\"35\"\n            fill=\"currentColor\"\n            className=\"bi bi-handbag-fill\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M8 1a2 2 0 0 0-2 2v2H5V3a3 3 0 1 1 6 0v2h-1V3a2 2 0 0 0-2-2zM5 5H3.36a1.5 1.5 0 0 0-1.483 1.277L.85 13.13A2.5 2.5 0 0 0 3.322 16h9.355a2.5 2.5 0 0 0 2.473-2.87l-1.028-6.853A1.5 1.5 0 0 0 12.64 5H11v1.5a.5.5 0 0 1-1 0V5H6v1.5a.5.5 0 0 1-1 0V5z\" />\n          </svg>\n          <span className=\"bag-quantity\">\n            <span>{cartTotalQuantity}</span>\n          </span>\n        </div>\n      </Link>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addToCart, clearCart, decreaseCart, getTotals, removeFromCart } from '../../slices/cartSlice';\nimport './Cart.css'\nconst Cart = () => {\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTotals())\n  },[cart,dispatch])\n\n  const removeitem = (cartitem) => {\n    dispatch(removeFromCart(cartitem))\n  }\n  const inceement = (cartitem) => {\n    dispatch(addToCart(cartitem))\n  }\n  const deceement = (cartitem) => {\n    dispatch(decreaseCart(cartitem))\n  }\n  const clearitems = () => {\n    dispatch(clearCart())\n  }\n  return (\n    <div className=\"cart-container\">\n      <h2>Shopping Cart</h2>\n      {\n        cart.cartItems.length === 0 ? (\n          <div className='cart-empty'>\n            <p>Your Cart is Currntly empty </p>\n            <div className='start-shopping'>\n              <Link to='/'>\n                <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                fill=\"currentColor\"\n                className=\"bi bi-arrow-left\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n                />\n              </svg>\n                <span> Start Shopping</span>\n              </Link>\n            </div>\n          </div>\n        ) : (\n            <div>\n              <div className='titles'>\n                <h3 className='Product'>Product</h3>\n                <h3 className='Price'>Price</h3>\n                <h3 className='Quantity'>Quantity</h3>\n                <h3 className='total'>Total</h3>\n              </div>\n              <div className='cart-items'>\n                {\n                  cart.cartItems.map(cartitem => (\n                    <div className='cart-item' key={cartitem.id}>\n                      <div className='cart-product'>\n                        <img src={cartitem.image} alt=''></img>\n                        <div>\n                          <h3>{cartitem.title}</h3>\n                          <p>{cartitem.description}</p>\n                          <button onClick={()=> removeitem(cartitem)}>Remove</button>\n                        </div>\n                      </div>\n                      <div className='cart-product-price'>\n                        ${cartitem.price}\n                      </div>\n                      <div className='cart-product-quantity'>\n                        <button onClick={() => deceement(cartitem)}>-</button>\n                        <div className='count'> {cartitem.cartQuantity}</div>\n                        <button onClick={() => inceement(cartitem)}>+</button>\n                      </div>\n                      <div className='cart-product-total-price'>\n                        ${cartitem.price * cartitem.cartQuantity}\n                      </div>\n                    </div>\n                  ))\n                }\n              </div>\n              <div className='cart-summary'>\n                <button className='clear-btn'\n                  onClick={() => clearitems()}\n                >Clear Cart</button>\n                <div className='cart-checkout'>\n                  <div className='subtotal'>\n                    <span>SubTotal</span>\n                    <span className='amount'>${cart.CartTotalAmount}</span>\n                  </div>\n                  <p>Taxes and shipping calculated at checkout</p>\n                  <button>Checkout</button>\n                  <div className='continue-shopping'>\n                    <Link to='/'>\n                      <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"20\"\n                      height=\"20\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-arrow-left\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n                      />\n                    </svg>\n                      <span> Continue Shopping</span>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n        )\n      }\n      \n    </div>\n  );\n};\n\nexport default Cart;\n","import \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Home from \"./components/Home/Home.jsx\";\nimport NavBar from \"./components/NavBar/NavBar.jsx\";\nimport Cart from \"./components/Cart/Cart.jsx\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ToastContainer />\n        <NavBar />\n        <div className=\"content-container\">\n          <Switch>\n            <Route path=\"/cart\" component={Cart} />\n            <Route path=\"/\" exact component={Home} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// const productsFetch\nconst initialState = {\n  items: [],\n  status: null,\n};\n\nexport const productsFetch = createAsyncThunk(\n  'products/productsFetch',\n  async() => {\n    const respons = await axios.get('https://fakestoreapi.com/products');\n    return respons?.data\n  }\n);\n\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [productsFetch.pending]: (state,action) => {\n      state.status = 'pending';\n    },\n    [productsFetch.fulfilled]: (state,action) => {\n      state.status = 'Success';\n      state.items = action.payload;\n    },\n    [productsFetch.rejected]: (state,action) => {\n      state.status = 'rejected';\n    },\n  },\n});\n\nexport default productsSlice.reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport productsReducer, { productsFetch } from \"./slices/productsSlice\";\nimport cartReducer, { getTotals } from \"./slices/cartSlice\";\nimport { productsApi } from \"./slices/productsApi\";\n\nconst store = configureStore({\n  reducer: {\n    products: productsReducer,\n    cart: cartReducer,\n    [productsApi.reducerPath]: productsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(productsApi.middleware),\n});\n\nstore.dispatch(productsFetch())\nstore.dispatch(getTotals())\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}